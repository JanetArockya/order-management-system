name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Run backend tests
      working-directory: ./order-service
      run: mvn clean test
    
    - name: Build backend
      working-directory: ./order-service
      run: mvn clean package -DskipTests

  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: './order-ui/package-lock.json'
    
    - name: Install frontend dependencies
      working-directory: ./order-ui
      run: npm ci
    
    - name: Run frontend tests
      working-directory: ./order-ui
      run: npm test -- --coverage --watchAll=false
    
    - name: Build frontend
      working-directory: ./order-ui
      run: npm run build

  deploy:
    needs: [test-backend, test-frontend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: './order-ui/package-lock.json'
    
    - name: Build backend
      working-directory: ./order-service
      run: mvn clean package -DskipTests
    
    - name: Build frontend
      working-directory: ./order-ui
      run: |
        npm ci
        npm run build
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    
    - name: Deploy to AWS Elastic Beanstalk
      run: |
        # Install EB CLI
        pip install awsebcli
        
        # Deploy backend
        cd order-service
        eb init -p java-17 order-management-backend --region ${{ secrets.AWS_REGION }}
        eb deploy
        
        # Deploy frontend to S3
        cd ../order-ui
        aws s3 sync build/ s3://${{ secrets.S3_BUCKET_NAME }} --delete
        aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
